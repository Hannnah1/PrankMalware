import subprocess
from subprocess import call
import multiprocessing
import time
import random
import platform
import os
from playsound import playsound

audio_file = "apple-sound1.wav"
random.seed(time.time())


def volume_control_mac():
    while 1:
        call(["osascript -e 'set volume output volume 100'"], shell=True)
        call(["osascript -e 'set volume without output muted'"], shell=True)

def volume_control_linux():
#    while 1: # This is currently not workingg
    call(["pactl -- set-sink-volume 0 99% > /dev/null"], shell=True)
    #call(["amixer -D default sset Master 99% > /dev/null"], shell=True)


def launch(target_os, takeover):

        while 1:
            #r = random.randint(60, 14400) # change to 43,200 (12hrs)
            proc = multiprocessing.Process(target=takeover, args=())
            proc.start()
            if platform == 'Darwin':
                return_code = subprocess.call(["afplay", audio_file])
            elif platform =='Linux':
                p = os.path.expanduser('~')
                playsound(p + '/.sshlocal/' + audio_file)

            proc.terminate()
            r = random.randint(60, 14400) # change to 43,200 (12hrs)
            #r = random.randint(120, 1800) # change to 43,200 (12hrs)

            time.sleep(r)

if __name__=='__main__':

    takeover = None
    platform = platform.system()
    if platform == 'Darwin':
        takeover = volume_control_mac()
    else:
        takeover = volume_control_linux()

    launch(platform, takeover)
